rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles at root level with nested collections
    match /users/{userId} {
      allow read, write, create, update, delete: if request.auth != null && request.auth.uid == userId;
      
      // User profile data
      match /profile/{profileDoc} {
        allow read, write, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }
      
      // Nested user collections - all under users/{userId}/
      match /activities/{activityId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
      
      match /lapData/{lapId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
      
      match /trainingPlans/{planId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
      
      match /trackedWorkouts/{workoutId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
      
      match /recoveryMetrics/{metricId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
      
      match /generatedPlans/{planId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
      
      match /trainingCalendars/{calendarId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Root-level collections with userId-based access
    match /workouts/{workoutId} {
      allow read, write, create, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}